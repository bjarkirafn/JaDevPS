<?xml version="1.0" encoding="utf-8"?>
<plasterManifest schemaVersion="1.0"
  xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
  <metadata>
    <name>PSModule</name>
    <id>d4215a18-ea33-4786-8e3f-35bd161e961d</id>
    <version>1.0.1</version>
    <title>PS Module Template</title>
    <description>Template for creating a minimal PowerShell module</description>
    <author>Simon Wahlin</author>
    <tags>Module, ModuleManifest</tags>
  </metadata>
  <parameters>
    <parameter name='ModuleName' type='text' prompt='Enter the name of the module'/>
    <parameter name='ModuleDescription' type='text' prompt='Enter the description for the module' default='${PLASTER_PARAM_ModuleName} module.'/>
    <parameter name='FullName' type='user-fullname' prompt='Enter your full name' store='text' />
    <parameter name='Email' type='user-email' prompt='Enter your public email address' store='text' />
    <parameter name='Company' type='text' prompt='Enter company name' store='text' />
    <parameter name='Version' type='text' prompt='Enter the version number of the module' store='text'/>
    <parameter name='GitUserName' type='text' prompt='Your Git UserName' store='text'/>
    <parameter name='Editor' type='choice' prompt='Select a editor for editor integration (or None):' store='text' >
      <choice label='&amp;None' help="No editor specified." value="None"/>
      <choice label='Visual Studio &amp;Code' help="Your editor is Visual Studio Code." value="VSCode"/>
    </parameter>

    <parameter name='License' type='choice' prompt='Select a license for your module' store='text'>
      <choice label='&amp;Apache' help="Adds an Apache license file." value="Apache"/>
      <choice label='&amp;MIT' help="Adds an MIT license file." value="MIT"/>
      <choice label='&amp;Commercial' help="Adds a Commercial license file." value="Commercial"/>
      <choice label='&amp;None' help="No license specified." value="None"/>
    </parameter>

    <parameter name='Options' type='multichoice' default='0,1,2,3,4' prompt='Select desired options' store='text'>
      <choice label='&amp;Pester test support' help="Adds Tests directory and a starter Pester Tests file." value="Pester"/>
      <choice label='P&amp;Sake build script' help="Adds a PSake build script that generates the module directory for publishing to the PSGallery." value="PSake"/>
      <choice label='Invoke-&amp;Build build script' help="Adds an Invoke-Build build script that generates the module directory for publishing to the PSGallery." value="InvokeBuild"/>
      <choice label='&amp;Gitingore' help="Adds a .gitignore file." value="Gitignore"/>
      <choice label='&amp;Readme' help="Adds a Readme.md file." value="Readme"/>
      <choice label='&amp;None' help="No options specified." value="None"/>
    </parameter>

  </parameters>
  <content>
    <message>&#10;&#10;Scaffolding your PowerShell Module...&#10;&#10;&#10;</message>
    <!-- Folder structure -->
    <file source='' destination='${PLASTER_PARAM_ModuleName}/src' />
    <file source='' destination='${PLASTER_PARAM_ModuleName}/src/Private' />
    <file source='' destination='${PLASTER_PARAM_ModuleName}/src/Public' />
    <file source='' destination='${PLASTER_PARAM_ModuleName}/src/Classes' />
    <file source='_shared/_PrefixCode.ps1' destination='${PLASTER_PARAM_ModuleName}/src/_PrefixCode.ps1' />
    <!-- Manifest -->
    <newModuleManifest destination='${PLASTER_PARAM_ModuleName}/src/${PLASTER_PARAM_ModuleName}.psd1' moduleVersion='$PLASTER_PARAM_Version' rootModule='${PLASTER_PARAM_ModuleName}.psm1' author='${PLASTER_PARAM_FullName}' companyName='${PLASTER_PARAM_Company}' description='${PLASTER_PARAM_ModuleDescription}' encoding='UTF8-NoBOM'/>
    <!-- Build file for ModuleBuilder -->
    <templateFile source='src/build.psd1' destination='${PLASTER_PARAM_ModuleName}/src/build.psd1' />
    <!-- Module file for DEV code -->
    <file source='src/Module.psm1' destination='${PLASTER_PARAM_ModuleName}/src/${PLASTER_PARAM_ModuleName}.psm1'/>
    <file source='_shared/.editorconfig' destination='${PLASTER_PARAM_ModuleName}/.editorconfig'/>
    <file source='_shared/ScriptAnalyzerSettings.psd1' destination='${PLASTER_PARAM_ModuleName}/ScriptAnalyzerSettings.psd1'/>
    <!-- <file source='src/Docs' destination='${PLASTER_PARAM_ModuleName}/Docs'/> -->
    <!-- Pester tests -->
    <templateFile condition="$PLASTER_PARAM_Options -contains 'Pester'" source='src/test/Module.T.ps1' destination='${PLASTER_PARAM_ModuleName}/Test/Unit/${PLASTER_PARAM_ModuleName}.Tests.ps1' />
    <!-- .gitignore -->
    <templateFile condition="$PLASTER_PARAM_Options -contains 'Gitignore'" source='_shared/.gitignore' destination='${PLASTER_PARAM_ModuleName}/.gitignore' />
    <templateFile condition="$PLASTER_PARAM_Options -contains 'Gitignore'" source='_shared/.gitattributes' destination='${PLASTER_PARAM_ModuleName}/.gitattributes' />
    <!-- Readme.md -->
    <templateFile condition="($PLASTER_PARAM_Options -contains 'Readme')" source='_shared/README_.md' destination='${PLASTER_PARAM_ModuleName}/README.md' />
    <!-- InvokeBuild -->
    <file condition="($PLASTER_PARAM_Options -contains 'InvokeBuild')" source='_shared/invoke.build.ps1' destination='${PLASTER_PARAM_ModuleName}/${PLASTER_PARAM_ModuleName}.build.ps1' />
    <!-- Editor files -->
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode')" source='_shared/editor/VSCode/settings.json' destination='${PLASTER_PARAM_ModuleName}/.vscode/settings.json' />
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode')" source='_shared/editor/VSCode/launch.json' destination='${PLASTER_PARAM_ModuleName}/.vscode/launch.json' />
    <!-- License file -->
    <file condition="($PLASTER_PARAM_License -eq 'Apache')" source='_shared/license/apache-2.0.txt' destination='${PLASTER_PARAM_ModuleName}/license.txt' />
    <templateFile condition="($PLASTER_PARAM_License -eq 'MIT')" source='_shared/license/MIT.txt' destination='${PLASTER_PARAM_ModuleName}/license.txt' />
    <templateFile condition="($PLASTER_PARAM_License -eq 'Commercial')" source='_shared/license/CommercialLicense.md' destination='${PLASTER_PARAM_ModuleName}/license.md' />

    <!--Docs-->
    <templateFile source='_shared/Docs/CODE_OF_CONDUCT.md' destination='${PLASTER_PARAM_ModuleName}/Docs/CODE_OF_CONDUCT.md'/>
    <templateFile source='_shared/Docs/CONTRIBUTING.md' destination='${PLASTER_PARAM_ModuleName}/Docs/CONTRIBUTING.md'/>

    <!-- Appveyor -->
    <templateFile condition="($PLASTER_PARAM_Options -contains 'Appveyor')" source='src/appveyor.yml' destination='${PLASTER_PARAM_ModuleName}/appveyor.yml' />
    <!-- Required modules -->
    <requireModule name="Pester" condition="$PLASTER_PARAM_Options -contains 'Pester'" minimumVersion="3.4.0" message="Without Pester, you will not be able to run the provided Pester test to validate your module manifest file.`nWithout version 3.4.0, VS Code will not display Pester warnings and errors in the Problems panel."/>
    <requireModule name="InvokeBuild" condition="$PLASTER_PARAM_Options -contains 'InvokeBuild'" minimumVersion="3.6.5" message="Without InvokeBuild, you will not be able to build the module and create a production version."/>
    <requireModule name="ModuleBuilder" condition="$PLASTER_PARAM_Options -contains 'InvokeBuild'" minimumVersion="1.0.0" message="Without ModuleBuilder, you will not be able to build the module and create a production version."/>
    <!-- Summary messages -->
    <message>&#10;&#10;Your new PowerShell module project '$PLASTER_PARAM_ModuleName' has been created.&#10;&#10;</message>
    <message condition="$PLASTER_PARAM_Options -contains 'Pester'">&#10;A Pester test has been created to validate the module's manifest file. Add additional tests to the test directory.</message>
  </content>
</plasterManifest>
